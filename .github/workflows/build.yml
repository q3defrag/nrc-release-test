name: build

on: [workflow_dispatch]

jobs:





  windows-msys:
    name: ${{ matrix.config }} Windows ${{ matrix.arch }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64]
        cc: [gcc]
        include:
          # - arch: x86
          #   msystem: MINGW32
          #   prefix: mingw-w64-i686

          - arch: x86_64
            msystem: MINGW64
            prefix: mingw-w64-x86_64

    defaults:
      run:
        shell: msys2 {0}

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        install: ${{ matrix.prefix }}-qt5-base ${{ matrix.prefix }}-libxml2 git p7zip
        msystem: ${{ matrix.msystem }}
        path-type: minimal
        release: false
        update: false

    - name: Build
      run: |
        mkdir -p install/settings
        mkdir -p install/bsettings
        echo > install/settings/.DUMMMY
        echo > install/bsettings/DUMMMY
        7z a Windows-${{ matrix.arch }}.zip ./install/*

    - uses: actions/upload-artifact@v4
      with:
        name: Windows-${{ matrix.arch }}
        path: Windows-${{ matrix.arch }}.zip
        if-no-files-found: error





  
  create-testing:
    if: github.ref == 'refs/heads/master' && ( github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
    needs: [windows-msys]
    runs-on: ubuntu-latest
    steps:



      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Create binary archives
        shell: bash
        run: |
          mv Windows-x86_64/Windows-x86_64.zip netradiant-custom-$(date +%Y%m%d)-windows-x86_64.zip




      - name: Get current date
        id: date
        run: |
          echo "MY_DATE=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          TAG_NAME: nightly-tag-${{ env.MY_DATE }}
          RELEASE_NAME: nightly-release-${{ env.MY_DATE }}

      - name: Create latest build
        uses: Garux/action-automatic-releases@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.MY_DATE }}
          prerelease: false
          title: Latest Build
          files: |
            *.zip
            *.7z


      # - name: Install tools
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0
      #     submodules: recursive
      
      # - name: 'Build Changelog'
      #   id: build_changelog
      #   uses: mikepenz/release-changelog-builder-action@v5
      #   with:
      #     mode: "COMMIT"
      #     configurationJson: |
      #       {
      #         "tag_resolver": {
      #           "method": "sort",
      #         }
      #       }
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: ${{ env.MY_DATE }}
      #     # generate_release_notes: true
      #     make_latest: true
      #     body: ${{steps.build_changelog.outputs.changelog}}
          
